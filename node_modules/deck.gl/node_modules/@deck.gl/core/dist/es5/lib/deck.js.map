{"version":3,"sources":["../../../src/lib/deck.js"],"names":["noop","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","Effect","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","onWebGLInitialized","onResize","onViewStateChange","onBeforeRender","onAfterRender","onLoad","debug","drawPickingColors","_animate","defaultProps","_onMetrics","Deck","props","Object","assign","viewManager","layerManager","effectManager","deckRenderer","deckPicker","_needsRedraw","_pickRequest","_lastPointerDownInfo","initialViewState","interactiveState","_onEvent","bind","_onPointerDown","_onPointerMove","_onPointerLeave","_pickAndCallback","_onRendererInitialized","_onRenderFrame","_onViewStateChange","_onInteractiveStateChange","document","canvas","_createCanvas","animationLoop","_createAnimationLoop","stats","Stats","setProps","start","stop","finalize","eventManager","destroy","parentElement","removeChild","get","timeStart","log","removed","_setCanvasSize","newProps","_getViews","_getViewState","timeEnd","opts","clearRedrawFlags","redraw","viewManagerNeedsRedraw","needsRedraw","layerManagerNeedsRedraw","effectManagerNeedsRedraw","deckRendererNeedsRedraw","force","redrawReason","incrementCount","_customRender","_drawLayers","rect","getViewports","x","y","radius","layerIds","getLayers","activateViewport","selectedInfos","pickObject","viewports","mode","depth","result","length","infos","pickObjects","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_checkForCanvasSizeChange","newWidth","clientWidth","newHeight","clientHeight","autoResizeDrawingBuffer","AnimationLoop","onCreateContext","onInitialize","onRender","MapView","Array","isArray","event","callback","type","pos","offsetCenter","emptyInfo","pickedInfo","find","info","index","cursor","animationProps","context","enable","copyState","blend","blendFunc","polygonOffsetFill","depthTest","depthFunc","EventManager","events","pointerdown","pointermove","pointerleave","eventType","EVENTS","on","ViewManager","onInteractiveStateChange","viewport","LayerManager","deck","EffectManager","DeckRenderer","DeckPicker","_updateCanvasSize","renderOptions","renderLayers","getViews","pass","getEffects","_setGLContext","tick","table","forEach","stat","name","time","count","average","getAverageTime","hz","getHz","reset","_updateCursor","updateLayers","_updateAnimationProps","updateViewStates","params","viewId","eventOptions","getLastPickedObject","layer","layerHandler","handler","rootHandler","handled","call","leftButton","rightButton","_requestPick","onHover"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from './effect-manager';\nimport Effect from './effect';\nimport DeckRenderer from './deck-renderer';\nimport DeckPicker from './deck-picker';\nimport log from '../utils/log';\n\nimport GL from '@luma.gl/constants';\nimport {AnimationLoop, createGLContext, trackContextState, setParameters} from '@luma.gl/core';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENTS} from './constants';\n/* global document */\n\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.bool,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLoad: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool,\n\n    // Experimental props\n\n    // Forces a redraw every animation frame\n    _animate: PropTypes.bool\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  _animate: false,\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLoad: noop,\n  _onMetrics: null,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\n/* eslint-disable max-statements */\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n    this.deckRenderer = null;\n    this.deckPicker = null;\n\n    this._needsRedraw = true;\n    this._pickRequest = {};\n    // Pick and store the object under the pointer on `pointerdown`.\n    // This object is reused for subsequent `onClick` and `onDrag*` callbacks.\n    this._lastPointerDownInfo = null;\n\n    this.viewState = props.initialViewState || null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onEvent = this._onEvent.bind(this);\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._onPointerLeave = this._onPointerLeave.bind(this);\n    this._pickAndCallback = this._pickAndCallback.bind(this);\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n\n    if (!props.gl) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n    }\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.stats = new Stats({id: 'deck.gl'});\n\n    this.setProps(props);\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n    this._lastPointerDownInfo = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n    }\n\n    if (this.viewManager) {\n      this.viewManager.finalize();\n      this.viewManager = null;\n    }\n\n    if (this.eventManager) {\n      this.eventManager.destroy();\n    }\n\n    if (!this.props.canvas && !this.props.gl && this.canvas) {\n      // remove internally created canvas\n      this.canvas.parentElement.removeChild(this.canvas);\n      this.canvas = null;\n    }\n  }\n\n  setProps(props) {\n    this.stats.get('setProps Time').timeStart();\n\n    if ('onLayerHover' in props) {\n      log.removed('onLayerHover', 'onHover')();\n    }\n    if ('onLayerClick' in props) {\n      log.removed('onLayerClick', 'onClick')();\n    }\n\n    props = Object.assign({}, this.props, props);\n    this.props = props;\n\n    // Update CSS size of canvas\n    this._setCanvasSize(props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const newProps = Object.assign({}, props, {\n      views: this._getViews(this.props),\n      width: this.width,\n      height: this.height\n    });\n\n    const viewState = this._getViewState(props);\n    if (viewState) {\n      newProps.viewState = viewState;\n    }\n\n    // Update view manager props\n    if (this.viewManager) {\n      this.viewManager.setProps(newProps);\n    }\n\n    // Update layer manager props (but not size)\n    if (this.layerManager) {\n      this.layerManager.setProps(newProps);\n    }\n\n    if (this.effectManager) {\n      this.effectManager.setProps(newProps);\n    }\n\n    // Update animation loop\n    if (this.animationLoop) {\n      this.animationLoop.setProps(newProps);\n    }\n\n    if (this.deckRenderer) {\n      this.deckRenderer.setProps(newProps);\n    }\n\n    if (this.deckPicker) {\n      this.deckPicker.setProps(newProps);\n    }\n\n    this.stats.get('setProps Time').timeEnd();\n  }\n\n  // Public API\n  // Check if a redraw is needed\n  // Returns `false` or a string summarizing the redraw reason\n  // opts.clearRedrawFlags (Boolean) - clear the redraw flag. Default `true`\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw = this._needsRedraw;\n\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager.needsRedraw(opts);\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw(opts);\n    const effectManagerNeedsRedraw = this.effectManager.needsRedraw(opts);\n    const deckRendererNeedsRedraw = this.deckRenderer.needsRedraw(opts);\n\n    redraw =\n      redraw ||\n      viewManagerNeedsRedraw ||\n      layerManagerNeedsRedraw ||\n      effectManagerNeedsRedraw ||\n      deckRendererNeedsRedraw;\n    return redraw;\n  }\n\n  redraw(force) {\n    if (!this.layerManager) {\n      // Not yet initialized\n      return;\n    }\n    // If force is falsy, check if we need to redraw\n    const redrawReason = force || this.needsRedraw({clearRedrawFlags: true});\n\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.get('Redraw Count').incrementCount();\n    if (this.props._customRender) {\n      this.props._customRender(redrawReason);\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  pickObject({x, y, radius = 0, layerIds = null}) {\n    this.stats.get('pickObject Time').timeStart();\n    const layers = this.layerManager.getLayers({layerIds});\n    const activateViewport = this.layerManager.activateViewport;\n    const selectedInfos = this.deckPicker.pickObject({\n      x,\n      y,\n      radius,\n      layers,\n      viewports: this.getViewports({x, y}),\n      activateViewport,\n      mode: 'query',\n      depth: 1\n    }).result;\n    this.stats.get('pickObject Time').timeEnd();\n    return selectedInfos.length ? selectedInfos[0] : null;\n  }\n\n  pickMultipleObjects({x, y, radius = 0, layerIds = null, depth = 10}) {\n    this.stats.get('pickMultipleObjects Time').timeStart();\n    const layers = this.layerManager.getLayers({layerIds});\n    const activateViewport = this.layerManager.activateViewport;\n    const selectedInfos = this.deckPicker.pickObject({\n      x,\n      y,\n      radius,\n      layers,\n      viewports: this.getViewports({x, y}),\n      activateViewport,\n      mode: 'query',\n      depth\n    }).result;\n    this.stats.get('pickMultipleObjects Time').timeEnd();\n    return selectedInfos;\n  }\n\n  pickObjects({x, y, width = 1, height = 1, layerIds = null}) {\n    this.stats.get('pickObjects Time').timeStart();\n    const layers = this.layerManager.getLayers({layerIds});\n    const activateViewport = this.layerManager.activateViewport;\n    const infos = this.deckPicker.pickObjects({\n      x,\n      y,\n      width,\n      height,\n      layers,\n      viewports: this.getViewports({x, y, width, height}),\n      activateViewport\n    });\n    this.stats.get('pickObjects Time').timeEnd();\n    return infos;\n  }\n\n  // Private Methods\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      /* global document */\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      this.canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = 'absolute';\n      this.canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (!canvas) {\n      return false;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n    const newWidth = canvas.clientWidth || canvas.width;\n    const newHeight = canvas.clientHeight || canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      this.width = newWidth;\n      this.height = newHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      gl,\n      onCreateContext: opts =>\n        createGLContext(Object.assign({}, glOptions, opts, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState(props) {\n    return props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  _getViews(props) {\n    // Default to a full screen map view port\n    let views = props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = props.controller;\n    }\n    return views;\n  }\n\n  // The `pointermove` event may fire multiple times in between two animation frames,\n  // it's a waste of time to run picking without rerender. Instead we save the last pick\n  // request and only do it once on the next animation frame.\n  _requestPick({event, callback, mode}) {\n    const {_pickRequest} = this;\n    if (event.type === 'pointerleave') {\n      _pickRequest.x = -1;\n      _pickRequest.y = -1;\n      _pickRequest.radius = 0;\n    } else {\n      const pos = event.offsetCenter;\n      // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n      // assertion error when attempting to unproject the position.\n      if (!pos) {\n        return;\n      }\n      _pickRequest.x = pos.x;\n      _pickRequest.y = pos.y;\n      _pickRequest.radius = this.props.pickingRadius;\n    }\n\n    _pickRequest.callback = callback;\n    _pickRequest.event = event;\n    _pickRequest.mode = mode;\n  }\n\n  // Actually run picking\n  _pickAndCallback() {\n    const {_pickRequest} = this;\n\n    if (_pickRequest.mode) {\n      // perform picking\n      const {result, emptyInfo} = this.deckPicker.pickObject(\n        Object.assign(\n          {\n            layers: this.layerManager.getLayers(),\n            viewports: this.getViewports(_pickRequest),\n            activateViewport: this.layerManager.activateViewport,\n            depth: 1\n          },\n          _pickRequest\n        )\n      );\n      if (_pickRequest.callback) {\n        const pickedInfo = result.find(info => info.index >= 0) || emptyInfo;\n        _pickRequest.callback(pickedInfo, _pickRequest.event);\n      }\n      _pickRequest.mode = null;\n    }\n  }\n\n  _updateCursor() {\n    if (this.canvas) {\n      this.canvas.style.cursor = this.props.getCursor(this.interactiveState);\n    }\n  }\n\n  // Updates animation props on the layer context\n  _updateAnimationProps(animationProps) {\n    this.layerManager.context.animationProps = animationProps;\n  }\n\n  _setGLContext(gl) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = gl.canvas;\n      trackContextState(gl, {enable: true, copyState: true});\n    }\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    this.eventManager = new EventManager(gl.canvas, {\n      events: {\n        pointerdown: this._onPointerDown,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerLeave\n      }\n    });\n    for (const eventType in EVENTS) {\n      this.eventManager.on(eventType, this._onEvent);\n    }\n\n    this.viewManager = new ViewManager({\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange,\n      onInteractiveStateChange: this._onInteractiveStateChange,\n      views: this._getViews(this.props),\n      viewState: this._getViewState(this.props),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    assert(this.viewManager);\n    const viewport = this.viewManager.getViewports()[0];\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      deck: this,\n      stats: this.stats,\n      viewport\n    });\n\n    this.effectManager = new EffectManager();\n\n    this.deckRenderer = new DeckRenderer(gl);\n\n    this.deckPicker = new DeckPicker(gl);\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _drawLayers(redrawReason, renderOptions) {\n    const {gl} = this.layerManager.context;\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    const layers = this.layerManager.getLayers();\n    const activateViewport = this.layerManager.activateViewport;\n\n    this.deckRenderer.renderLayers(\n      Object.assign(\n        {\n          layers,\n          viewports: this.viewManager.getViewports(),\n          activateViewport,\n          views: this.viewManager.getViews(),\n          pass: 'screen',\n          redrawReason,\n          effects: this.effectManager.getEffects()\n        },\n        renderOptions\n      )\n    );\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  _onRendererInitialized({gl}) {\n    this._setGLContext(gl);\n  }\n\n  _onRenderFrame(animationProps) {\n    this.stats.get('frameRate').timeEnd();\n    this.stats.get('frameRate').timeStart();\n\n    // Log perf stats every second\n    if (animationProps.tick % 60 === 0) {\n      const table = {};\n      this.stats.forEach(stat => {\n        table[stat.name] = {\n          time: stat.time || 0,\n          count: stat.count || 0,\n          average: stat.getAverageTime() || 0,\n          hz: stat.getHz() || 0\n        };\n      });\n      this.stats.reset();\n      log.table(3, table)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        this.props._onMetrics(table);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager.updateLayers(animationProps);\n\n    // Needs to be done before drawing\n    this._updateAnimationProps(animationProps);\n\n    // Perform picking request if any\n    this._pickAndCallback();\n\n    // Redraw if necessary\n    this.redraw(false);\n\n    // Update viewport transition if needed\n    // Note: this can trigger `onViewStateChange`, and affect layers\n    // We want to defer these changes to the next frame\n    if (this.viewManager) {\n      this.viewManager.updateViewStates(animationProps);\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState[params.viewId] = viewState;\n      this.viewManager.setProps({viewState});\n    }\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.interactiveState.isDragging) {\n      this.interactiveState.isDragging = isDragging;\n    }\n  }\n\n  _onEvent(event) {\n    const eventOptions = EVENTS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventOptions || !pos) {\n      return;\n    }\n\n    // Reuse last picked object\n    const layers = this.layerManager.getLayers();\n    const info = this.deckPicker.getLastPickedObject(\n      {\n        x: pos.x,\n        y: pos.y,\n        layers,\n        viewports: this.getViewports(pos)\n      },\n      this._lastPointerDownInfo\n    );\n\n    const {layer} = info;\n    const layerHandler =\n      layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n    const rootHandler = this.props[eventOptions.handler];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled && rootHandler) {\n      rootHandler(info, event);\n    }\n  }\n\n  _onPointerDown(event) {\n    const pos = event.offsetCenter;\n    this._lastPointerDownInfo = this.pickObject({\n      x: pos.x,\n      y: pos.y\n    });\n  }\n\n  _onPointerMove(event) {\n    if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    }\n    this._requestPick({\n      callback: this.props.onHover,\n      event,\n      mode: 'hover'\n    });\n  }\n\n  _onPointerLeave(event) {\n    this._requestPick({\n      callback: this.props.onHover,\n      event,\n      mode: 'hover'\n    });\n  }\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n"],"file":"deck.js"}